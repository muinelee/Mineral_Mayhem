//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Scripts/PlayerScripts/Core/Test_InputControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Test_InputControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Test_InputControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Test_InputControls"",
    ""maps"": [
        {
            ""name"": ""Test_Input"",
            ""id"": ""b25e461c-d885-471c-9fe9-818b43f7e28c"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""e23b4f2b-e3c1-46f5-8168-3f4ab696c745"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""201f54fb-f575-4415-b140-e9d87aeb3d0e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Basic_Attack"",
                    ""type"": ""Button"",
                    ""id"": ""1a537c6b-afb6-41e5-8ec5-c60fe9222136"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Block"",
                    ""type"": ""Button"",
                    ""id"": ""a38917e3-f4f2-42b5-9985-fbd926ce2b52"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Special_Ability_1"",
                    ""type"": ""Button"",
                    ""id"": ""43d9b422-7750-4e7c-8b2c-ceba021ebda5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Special_Ability_2"",
                    ""type"": ""Button"",
                    ""id"": ""16fcbb2e-348e-4132-ae36-4f7ac49beae1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Special_Ability_3"",
                    ""type"": ""Button"",
                    ""id"": ""655d03a6-2920-48b4-862f-9cc9cc8eac0a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ultimate_Ability"",
                    ""type"": ""Button"",
                    ""id"": ""29e6c106-275b-4d26-b4b5-9dc8ec65a61d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Toggle_Look_Ahead_Cam"",
                    ""type"": ""Button"",
                    ""id"": ""f984fa5f-d6dd-42a3-84d4-654b7317e585"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""3D Vector"",
                    ""id"": ""80c0d553-9b03-4ce8-bb0e-ca5b2308a914"",
                    ""path"": ""3DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""forward"",
                    ""id"": ""3a8c6635-127c-4b11-bb0c-b7371476c4f9"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""backward"",
                    ""id"": ""67a5fbb1-76ab-487f-a61b-f5ae641a0f5f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""d4cc7285-2d58-4b07-85dc-f995097359fa"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""2be4a560-ac70-49cd-a636-38185d71979f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2f429b6c-4219-4ded-ad11-5274d518eae0"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""82505a6b-ac9f-48ee-ae5a-727758623d13"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""482c7a4b-f2a9-46a2-8c15-a6668d50bbad"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1de993e7-06f4-4ce0-b8b5-7580700e187e"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Special_Ability_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cbed60bd-254a-4ac9-ae06-a7be9425f940"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Basic_Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""26b1a90e-45b6-4d0e-9bc6-47a52ad4e694"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Special_Ability_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""916f83ea-66f3-4e3c-9d39-fbd1137062ab"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""890ec960-eee0-4ea2-98e6-556ad104db14"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Special_Ability_3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""069a79df-6034-47c7-aa25-b00efb3cb979"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ultimate_Ability"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5589a1f-1678-4fd2-82c8-ed9183bb3194"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Toggle_Look_Ahead_Cam"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Test_Input
        m_Test_Input = asset.FindActionMap("Test_Input", throwIfNotFound: true);
        m_Test_Input_Move = m_Test_Input.FindAction("Move", throwIfNotFound: true);
        m_Test_Input_Dash = m_Test_Input.FindAction("Dash", throwIfNotFound: true);
        m_Test_Input_Basic_Attack = m_Test_Input.FindAction("Basic_Attack", throwIfNotFound: true);
        m_Test_Input_Block = m_Test_Input.FindAction("Block", throwIfNotFound: true);
        m_Test_Input_Special_Ability_1 = m_Test_Input.FindAction("Special_Ability_1", throwIfNotFound: true);
        m_Test_Input_Special_Ability_2 = m_Test_Input.FindAction("Special_Ability_2", throwIfNotFound: true);
        m_Test_Input_Special_Ability_3 = m_Test_Input.FindAction("Special_Ability_3", throwIfNotFound: true);
        m_Test_Input_Ultimate_Ability = m_Test_Input.FindAction("Ultimate_Ability", throwIfNotFound: true);
        m_Test_Input_Toggle_Look_Ahead_Cam = m_Test_Input.FindAction("Toggle_Look_Ahead_Cam", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Test_Input
    private readonly InputActionMap m_Test_Input;
    private List<ITest_InputActions> m_Test_InputActionsCallbackInterfaces = new List<ITest_InputActions>();
    private readonly InputAction m_Test_Input_Move;
    private readonly InputAction m_Test_Input_Dash;
    private readonly InputAction m_Test_Input_Basic_Attack;
    private readonly InputAction m_Test_Input_Block;
    private readonly InputAction m_Test_Input_Special_Ability_1;
    private readonly InputAction m_Test_Input_Special_Ability_2;
    private readonly InputAction m_Test_Input_Special_Ability_3;
    private readonly InputAction m_Test_Input_Ultimate_Ability;
    private readonly InputAction m_Test_Input_Toggle_Look_Ahead_Cam;
    public struct Test_InputActions
    {
        private @Test_InputControls m_Wrapper;
        public Test_InputActions(@Test_InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Test_Input_Move;
        public InputAction @Dash => m_Wrapper.m_Test_Input_Dash;
        public InputAction @Basic_Attack => m_Wrapper.m_Test_Input_Basic_Attack;
        public InputAction @Block => m_Wrapper.m_Test_Input_Block;
        public InputAction @Special_Ability_1 => m_Wrapper.m_Test_Input_Special_Ability_1;
        public InputAction @Special_Ability_2 => m_Wrapper.m_Test_Input_Special_Ability_2;
        public InputAction @Special_Ability_3 => m_Wrapper.m_Test_Input_Special_Ability_3;
        public InputAction @Ultimate_Ability => m_Wrapper.m_Test_Input_Ultimate_Ability;
        public InputAction @Toggle_Look_Ahead_Cam => m_Wrapper.m_Test_Input_Toggle_Look_Ahead_Cam;
        public InputActionMap Get() { return m_Wrapper.m_Test_Input; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Test_InputActions set) { return set.Get(); }
        public void AddCallbacks(ITest_InputActions instance)
        {
            if (instance == null || m_Wrapper.m_Test_InputActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Test_InputActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @Basic_Attack.started += instance.OnBasic_Attack;
            @Basic_Attack.performed += instance.OnBasic_Attack;
            @Basic_Attack.canceled += instance.OnBasic_Attack;
            @Block.started += instance.OnBlock;
            @Block.performed += instance.OnBlock;
            @Block.canceled += instance.OnBlock;
            @Special_Ability_1.started += instance.OnSpecial_Ability_1;
            @Special_Ability_1.performed += instance.OnSpecial_Ability_1;
            @Special_Ability_1.canceled += instance.OnSpecial_Ability_1;
            @Special_Ability_2.started += instance.OnSpecial_Ability_2;
            @Special_Ability_2.performed += instance.OnSpecial_Ability_2;
            @Special_Ability_2.canceled += instance.OnSpecial_Ability_2;
            @Special_Ability_3.started += instance.OnSpecial_Ability_3;
            @Special_Ability_3.performed += instance.OnSpecial_Ability_3;
            @Special_Ability_3.canceled += instance.OnSpecial_Ability_3;
            @Ultimate_Ability.started += instance.OnUltimate_Ability;
            @Ultimate_Ability.performed += instance.OnUltimate_Ability;
            @Ultimate_Ability.canceled += instance.OnUltimate_Ability;
            @Toggle_Look_Ahead_Cam.started += instance.OnToggle_Look_Ahead_Cam;
            @Toggle_Look_Ahead_Cam.performed += instance.OnToggle_Look_Ahead_Cam;
            @Toggle_Look_Ahead_Cam.canceled += instance.OnToggle_Look_Ahead_Cam;
        }

        private void UnregisterCallbacks(ITest_InputActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @Basic_Attack.started -= instance.OnBasic_Attack;
            @Basic_Attack.performed -= instance.OnBasic_Attack;
            @Basic_Attack.canceled -= instance.OnBasic_Attack;
            @Block.started -= instance.OnBlock;
            @Block.performed -= instance.OnBlock;
            @Block.canceled -= instance.OnBlock;
            @Special_Ability_1.started -= instance.OnSpecial_Ability_1;
            @Special_Ability_1.performed -= instance.OnSpecial_Ability_1;
            @Special_Ability_1.canceled -= instance.OnSpecial_Ability_1;
            @Special_Ability_2.started -= instance.OnSpecial_Ability_2;
            @Special_Ability_2.performed -= instance.OnSpecial_Ability_2;
            @Special_Ability_2.canceled -= instance.OnSpecial_Ability_2;
            @Special_Ability_3.started -= instance.OnSpecial_Ability_3;
            @Special_Ability_3.performed -= instance.OnSpecial_Ability_3;
            @Special_Ability_3.canceled -= instance.OnSpecial_Ability_3;
            @Ultimate_Ability.started -= instance.OnUltimate_Ability;
            @Ultimate_Ability.performed -= instance.OnUltimate_Ability;
            @Ultimate_Ability.canceled -= instance.OnUltimate_Ability;
            @Toggle_Look_Ahead_Cam.started -= instance.OnToggle_Look_Ahead_Cam;
            @Toggle_Look_Ahead_Cam.performed -= instance.OnToggle_Look_Ahead_Cam;
            @Toggle_Look_Ahead_Cam.canceled -= instance.OnToggle_Look_Ahead_Cam;
        }

        public void RemoveCallbacks(ITest_InputActions instance)
        {
            if (m_Wrapper.m_Test_InputActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ITest_InputActions instance)
        {
            foreach (var item in m_Wrapper.m_Test_InputActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Test_InputActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Test_InputActions @Test_Input => new Test_InputActions(this);
    public interface ITest_InputActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnBasic_Attack(InputAction.CallbackContext context);
        void OnBlock(InputAction.CallbackContext context);
        void OnSpecial_Ability_1(InputAction.CallbackContext context);
        void OnSpecial_Ability_2(InputAction.CallbackContext context);
        void OnSpecial_Ability_3(InputAction.CallbackContext context);
        void OnUltimate_Ability(InputAction.CallbackContext context);
        void OnToggle_Look_Ahead_Cam(InputAction.CallbackContext context);
    }
}
